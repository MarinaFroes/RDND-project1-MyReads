{"version":3,"sources":["icons/arrowback.svg","icons/mylogo.svg","utils/BooksAPI.js","utils/SHELVES_TYPES.js","Components/ShelfSelection.js","Components/Book.js","Components/Shelf.js","Components/SearchIcon.js","Components/MainPage.js","Components/SearchBar.js","Components/SearchPage.js","Components/Header.js","Components/Footer.js","App.js","index.js"],"names":["module","exports","api","token","localStorage","Math","random","toString","substr","headers","get","bookId","fetch","then","res","json","data","book","update","shelf","id","method","body","JSON","stringify","search","query","books","SHELVES_TYPES","ShelfSelection","onUpdateBook","currentShelf","className","role","onChange","event","target","value","map","key","Book","cover","undefined","imageLinks","smallThumbnail","src","alt","title","authors","join","Shelf","filter","SearchIcon","to","MainPage","SearchBar","onUpdateQuery","onClearQuery","arrowback","onClick","type","name","placeholder","SearchPage","searchedBooks","length","searchedBook","forEach","Header","Footer","href","rel","mylogo","App","state","updateBook","BooksAPI","updatedBook","setState","prevState","filteredBook","clearQuery","updateQuery","updateSearchedBooks","this","exact","path","render","Component","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.f5a53dd9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrowback.3687aa98.svg\";","module.exports = __webpack_public_path__ + \"static/media/mylogo.ce2bfb59.svg\";","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","export const SHELVES_TYPES = [\n  ['Currently Reading', 'currentlyReading'],\n  ['Want to read', 'wantToRead'],\n  ['Read', 'read'],\n  ['None', 'none']\n]\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { SHELVES_TYPES } from '../utils/SHELVES_TYPES'\n\nfunction ShelfSelection({ book, onUpdateBook, currentShelf }) {\n  return (\n    <div className='shelf-selection-container'>\n      <select\n        className='shelf-selection-menu'\n        role=\"menubar\"\n        onChange={event => onUpdateBook(book, event.target.value)}\n        value={currentShelf}\n      >\n        {SHELVES_TYPES.map(shelf => ( \n          <option\n            key={shelf[1]}\n            value={shelf[1]}\n            role='menuitem'\n          >\n            {shelf[0]}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n\nexport default ShelfSelection;\n\nShelfSelection.propTypes = {\n  book: PropTypes.object.isRequired,\n  onUpdateBook: PropTypes.func.isRequired,\n  currentShelf: PropTypes.string.isRequired\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ShelfSelection from './ShelfSelection'\n\nfunction Book({ book, onUpdateBook, currentShelf }) {\n  const dummyCover = 'https://dummyimage.com/128x193/e6e6e6/000.jpg&text=No+image+found';\n  let cover;\n  (book.imageLinks === undefined) ? (cover = dummyCover) : (cover = `${book.imageLinks.smallThumbnail}`)\n\n  return (\n    <section className='book-info'>\n      <div className='cover-container'>\n        <img\n          className='cover-img'\n          src={cover}\n          alt=''\n        />\n      </div>\n      <h2 className='book-title'>{book.title}</h2>\n      <p><strong>Authors:</strong> {book.authors ? book.authors.join(', ') : 'author not found'}</p>\n      <ShelfSelection\n        book={book}\n        onUpdateBook={onUpdateBook}\n        currentShelf={currentShelf}\n      />\n    </section>\n  )\n}\n\nexport default Book;\n\nBook.propTypes = {\n  book: PropTypes.object.isRequired,\n  onUpdateBook: PropTypes.func.isRequired,\n  currentShelf: PropTypes.string.isRequired\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Book from './Book'\nimport { SHELVES_TYPES } from '../utils/SHELVES_TYPES'\n\nfunction Shelf({ books, onUpdateBook }) {\n  return (\n    <section>\n      {\n        SHELVES_TYPES.filter(shelf => shelf[1] !== 'none').map(shelf => (\n            <div key={shelf[1]} className='shelf'>\n              <h1 className='shelf-title'>{shelf[0]}</h1>\n              <div className='books-container'>\n                {\n                books.filter(book => book.shelf === shelf[1]).map(book => (\n                  <Book\n                    key={book.id}\n                    book={book}\n                    onUpdateBook={onUpdateBook}\n                    currentShelf={shelf[1]}\n                  />\n                ))\n                }\n              </div>\n            </div>\n          )\n        )\n      }\n    </section>\n  )\n}\n\nexport default Shelf;\n\nShelf.propTypes = {\n  books: PropTypes.array.isRequired,\n  onUpdateBook: PropTypes.func.isRequired\n}\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction SearchIcon() {\n  return (\n    <Link\n      to='/search'\n    >\n      <div className='search-icon'></div>\n    </Link>\n  )\n}\n\n\nexport default SearchIcon;\n","import React from 'react'\nimport Shelf from './Shelf'\nimport SearchIcon from './SearchIcon'\nimport PropTypes from 'prop-types'\n\nfunction MainPage({ books, onUpdateBook }) {\n  return (\n    <main>\n      <Shelf books={books} onUpdateBook={onUpdateBook} />\n      <SearchIcon />\n    </main>\n  )\n}\n\nexport default MainPage;\n\nMainPage.propTypes = {\n  onUpdateBook: PropTypes.func.isRequired,\n  books: PropTypes.array.isRequired\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport arrowback from '../icons/arrowback.svg'\nimport { Link } from 'react-router-dom'\n\nfunction SearchBar({ query, onUpdateQuery, onClearQuery }) {\n  return (\n    <form>\n      <Link to='/'>\n        <img\n          src={`${arrowback}`}\n          alt=''\n          className='arrowback-icon'\n          onClick={() => onClearQuery()}\n        />\n      </Link>\n      <input\n        type='text'\n        name='search-bar'\n        className='search-bar'\n        value={query}\n        placeholder='Search book title or author...'\n        onChange={event => onUpdateQuery(event.target.value)}\n      />\n    </form>\n  )\n}\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  query: PropTypes.string.isRequired,\n  onUpdateQuery: PropTypes.func.isRequired,\n  onClearQuery: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport SearchBar from './SearchBar'\nimport Book from './Book'\n\nfunction SearchPage({ query, onUpdateQuery, onClearQuery, searchedBooks, books, onUpdateBook }) {\n  return (\n    <main className=\"search-page\">\n      <SearchBar\n        query={query}\n        onUpdateQuery={onUpdateQuery}\n        onClearQuery={onClearQuery}\n      />\n      <div className=\"results-message\">\n        <p>\n          Found <strong>{searchedBooks.length || 0}</strong> results.\n        </p>\n      </div>\n\n      {searchedBooks.length > 0 && (\n        <div className=\"show-search-results\">\n          {\n            searchedBooks.map(searchedBook => {\n              \n              books.forEach(book => {\n                  if (book.id === searchedBook.id) {\n                    searchedBook.shelf = book.shelf\n                  }\n              }) \n              \n              return (\n                <Book\n                  key={searchedBook.id}\n                  book={searchedBook}\n                  onUpdateBook={onUpdateBook}\n                  currentShelf={searchedBook.shelf || \"none\"}\n                />\n              )\n            })\n          }\n        </div>\n      )}\n    </main>\n  )\n}\n\nexport default SearchPage\n\nSearchPage.propTypes = {\n  query: PropTypes.string.isRequired,\n  onUpdateQuery: PropTypes.func.isRequired,\n  onClearQuery: PropTypes.func.isRequired,\n  onUpdateBook: PropTypes.func.isRequired,\n  searchedBooks: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n    .isRequired,\n  books: PropTypes.array.isRequired\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FaBookReader } from 'react-icons/fa'\n\nfunction Header({ title }) {\n  return (\n    <header>\n      <div className='header-icon'><FaBookReader /></div>\n      <h1>{title}</h1>\n    </header>\n  )\n}\n\nexport default Header;\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n}","import React from 'react';\nimport { FaGithub, FaLinkedin, FaEnvelope } from 'react-icons/fa';\nimport mylogo from '../icons/mylogo.svg'\n\nfunction Footer() {\n  return (\n    <footer>\n      <p>Page written by Marina Froes A. Costa</p>\n      <div className='icon-container'>\n        <a\n          className='icon'\n          href='https://github.com/MarinaFroes'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          {<FaGithub />}\n        </a>\n        <a\n          className='icon'\n          href='https://www.linkedin.com/in/marina-froes-a-costa/'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          {<FaLinkedin />}\n        </a>\n        <a\n          className='icon'\n          href='mailto:facosta.marina@gmail.com'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          {<FaEnvelope />}\n        </a>\n        <a\n          className='icon'\n          href='https://marinafroes.github.io/Portfolio/'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <img src={mylogo} alt=''/>\n        </a>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport './App.css'\nimport * as BooksAPI from './utils/BooksAPI'\nimport MainPage from './Components/MainPage'\nimport SearchPage from './Components/SearchPage'\nimport Header from './Components/Header'\nimport Footer from './Components/Footer'\n\nclass App extends Component {\n  state = {\n    books: [],\n    query: '',\n    searchedBooks: []\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll().then(books => {\n      this.setState({\n        books\n      })\n    })\n  }\n\n  updateBook = (book, shelf) => {\n    BooksAPI.update(book, shelf)\n      .then(() =>\n        BooksAPI.get(book.id)\n      )\n      .then((updatedBook) => {\n        this.setState(prevState => ({\n          books: [\n            updatedBook,\n            ...prevState.books.filter(\n              filteredBook => filteredBook.id !== book.id\n            )\n          ]\n        }))\n      })\n  }\n\n  clearQuery = () => {\n    this.updateQuery('')\n  }\n\n  updateSearchedBooks = query => {\n    query === '' ?\n    this.setState({\n      searchedBooks: []\n    }) :\n    BooksAPI.search(query)\n      .then(searchedBooks => {\n        this.setState({\n          searchedBooks\n        })\n      })\n  }\n\n  updateQuery = query => {\n    this.setState({\n      query\n    })\n\n    this.updateSearchedBooks(query)\n  }\n\n  render() {\n    const { query, books, searchedBooks } = this.state\n\n    return (\n      <div className='App'>\n        <Header title='MyReads' />\n        <Route\n          exact\n          path='/'\n          render={() => (\n            <MainPage\n              books={books}\n              onUpdateBook={this.updateBook}\n            />\n          )}\n        />\n        <Route\n          exact\n          path='/search'\n          render={() => (\n            <SearchPage\n              query={query}\n              onUpdateQuery={this.updateQuery}\n              onClearQuery={this.clearQuery}\n              searchedBooks={searchedBooks}\n              books={books}\n              onUpdateBook={this.updateBook}\n            />\n          )}\n        />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {HashRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <HashRouter basename='/'>\n    <App />\n  </HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}